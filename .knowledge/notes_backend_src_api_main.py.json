{"is_source_file": true, "format": "Python", "description": "The file defines a FastAPI web service for managing personal notes, including endpoints for CRUD operations, health check, and CORS configuration. It uses Pydantic models, dependency injection for the repository, and provides API route handlers.", "external_files": ["../db", "../schemas"], "external_methods": ["get_repository", "NotesRepository", "NotesRepository.list_notes", "NotesRepository.create_note", "NotesRepository.get_note", "NotesRepository.update_note", "NotesRepository.delete_note"], "published": ["app", "health_check", "list_notes", "create_note", "get_note", "update_note", "delete_note"], "classes": [], "methods": [{"name": "health_check()", "description": "Health check endpoint to verify the service is running.", "scope": "", "scopeKind": ""}, {"name": "NoteOut to_note_out(note)", "description": "Helper function to convert a domain note object to a NoteOut schema.", "scope": "", "scopeKind": ""}, {"name": "list_notes( limit: int = Query(100, ge=1, le=1000, description=\"Maximum number of notes to return\"), offset: int = Query(0, ge=0, description=\"Number of notes to skip\"), repo: NotesRepository = Depends(get_repository), )", "description": "Endpoint to retrieve a paginated list of notes.", "scope": "", "scopeKind": ""}, {"name": "create_note( payload: NoteCreate, repo: NotesRepository = Depends(get_repository), )", "description": "Endpoint to create a new note.", "scope": "", "scopeKind": ""}, {"name": "get_note( note_id: UUID, repo: NotesRepository = Depends(get_repository), )", "description": "Endpoint to retrieve a note by UUID.", "scope": "", "scopeKind": ""}, {"name": "update_note( note_id: UUID, payload: NoteUpdate, repo: NotesRepository = Depends(get_repository), )", "description": "Endpoint to update an existing note by UUID.", "scope": "", "scopeKind": ""}, {"name": "delete_note( note_id: UUID, repo: NotesRepository = Depends(get_repository), )", "description": "Endpoint to delete a note by UUID.", "scope": "", "scopeKind": ""}], "calls": ["get_repository()", "repo.list_notes()", "repo.create_note()", "repo.get_note()", "repo.update_note()", "repo.delete_note()"], "search-terms": ["FastAPI", "notes", "CRUD", "health", "NoteOut", "NoteCreate", "NoteUpdate", "UUID", "CORS", "API"], "state": 2, "file_id": 3, "knowledge_revision": 19, "git_revision": "3357a403c3949a90bc96eec836dcbcfa54341c2a", "revision_history": [{"9": "3357a403c3949a90bc96eec836dcbcfa54341c2a"}, {"19": "3357a403c3949a90bc96eec836dcbcfa54341c2a"}], "ctags": [{"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-36260-36269/notes_backend/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "create_note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-36260-36269/notes_backend/src/api/main.py", "pattern": "/^def create_note($/", "language": "Python", "kind": "function", "signature": "( payload: NoteCreate, repo: NotesRepository = Depends(get_repository), )"}, {"_type": "tag", "name": "delete_note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-36260-36269/notes_backend/src/api/main.py", "pattern": "/^def delete_note($/", "language": "Python", "kind": "function", "signature": "( note_id: UUID, repo: NotesRepository = Depends(get_repository), )"}, {"_type": "tag", "name": "get_note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-36260-36269/notes_backend/src/api/main.py", "pattern": "/^def get_note($/", "language": "Python", "kind": "function", "signature": "( note_id: UUID, repo: NotesRepository = Depends(get_repository), )"}, {"_type": "tag", "name": "health_check", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-36260-36269/notes_backend/src/api/main.py", "pattern": "/^def health_check():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "list_notes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-36260-36269/notes_backend/src/api/main.py", "pattern": "/^def list_notes($/", "language": "Python", "kind": "function", "signature": "( limit: int = Query(100, ge=1, le=1000, description=\"Maximum number of notes to return\"), offset: int = Query(0, ge=0, description=\"Number of notes to skip\"), repo: NotesRepository = Depends(get_repository), )"}, {"_type": "tag", "name": "openapi_tags", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-36260-36269/notes_backend/src/api/main.py", "pattern": "/^openapi_tags = [$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "to_note_out", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-36260-36269/notes_backend/src/api/main.py", "pattern": "/^def to_note_out(note) -> NoteOut:$/", "language": "Python", "typeref": "typename:NoteOut", "kind": "function", "signature": "(note)"}, {"_type": "tag", "name": "update_note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-36260-36269/notes_backend/src/api/main.py", "pattern": "/^def update_note($/", "language": "Python", "kind": "function", "signature": "( note_id: UUID, payload: NoteUpdate, repo: NotesRepository = Depends(get_repository), )"}], "hash": "5171b80494690230435a80320d25dddc", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/main.py", "fields": [{"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "openapi_tags = [", "scope": "", "scopeKind": "", "description": "unavailable"}]}