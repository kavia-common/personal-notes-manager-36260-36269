{"is_source_file": true, "format": "Python", "description": "This source file implements a FastAPI web service for managing personal notes. It defines API endpoints for health checks, listing, creating, retrieving, updating, and deleting notes. The file configures CORS middleware, utilizes dependency injection for the repository layer, and transforms domain models to API schemas.", "external_files": ["../db", "../schemas"], "external_methods": ["get_repository", "NotesRepository.create_note", "NotesRepository.get_note", "NotesRepository.list_notes", "NotesRepository.update_note", "NotesRepository.delete_note"], "published": ["app", "health_check", "list_notes", "create_note", "get_note", "update_note", "delete_note", "to_note_out"], "classes": [], "methods": [{"name": "health_check()", "description": "Health check endpoint to verify the service is running.", "scope": "", "scopeKind": ""}, {"name": "list_notes( limit: int = Query(100, ge=1, le=1000, description=\"Maximum number of notes to return\"), offset: int = Query(0, ge=0, description=\"Number of notes to skip\"), repo: NotesRepository = Depends(get_repository), )", "description": "Retrieves a paginated list of notes.", "scope": "", "scopeKind": ""}, {"name": "create_note( payload: NoteCreate, repo: NotesRepository = Depends(get_repository), )", "description": "Creates a new note and returns it.", "scope": "", "scopeKind": ""}, {"name": "get_note( note_id: UUID, repo: NotesRepository = Depends(get_repository), )", "description": "Retrieves a note by its UUID, or raises a 404 error if not found.", "scope": "", "scopeKind": ""}, {"name": "update_note( note_id: UUID, payload: NoteUpdate, repo: NotesRepository = Depends(get_repository), )", "description": "Updates an existing note by its UUID, or raises a 404 error if not found.", "scope": "", "scopeKind": ""}, {"name": "delete_note( note_id: UUID, repo: NotesRepository = Depends(get_repository), )", "description": "Deletes a note by its UUID, returning 204 on success or 404 if not found.", "scope": "", "scopeKind": ""}, {"name": "NoteOut to_note_out(note)", "description": "Converts a note domain model to the NoteOut schema.", "scope": "", "scopeKind": ""}], "calls": ["get_repository", "NotesRepository.list_notes", "NotesRepository.create_note", "NotesRepository.get_note", "NotesRepository.update_note", "NotesRepository.delete_note"], "search-terms": ["FastAPI", "notes endpoints", "CRUD notes", "health check", "UUID", "CORS middleware", "NotesRepository", "NoteCreate", "NoteUpdate", "NoteOut"], "state": 2, "file_id": 3, "knowledge_revision": 28, "git_revision": "28b561cbb4674becbe011959c8d16830dd6081ce", "revision_history": [{"9": "3357a403c3949a90bc96eec836dcbcfa54341c2a"}, {"19": "3357a403c3949a90bc96eec836dcbcfa54341c2a"}, {"28": "28b561cbb4674becbe011959c8d16830dd6081ce"}], "ctags": [{"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-36260-36269/notes_backend/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "create_note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-36260-36269/notes_backend/src/api/main.py", "pattern": "/^def create_note($/", "language": "Python", "kind": "function", "signature": "( payload: NoteCreate, repo: NotesRepository = Depends(get_repository), )"}, {"_type": "tag", "name": "delete_note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-36260-36269/notes_backend/src/api/main.py", "pattern": "/^def delete_note($/", "language": "Python", "kind": "function", "signature": "( note_id: UUID, repo: NotesRepository = Depends(get_repository), )"}, {"_type": "tag", "name": "get_note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-36260-36269/notes_backend/src/api/main.py", "pattern": "/^def get_note($/", "language": "Python", "kind": "function", "signature": "( note_id: UUID, repo: NotesRepository = Depends(get_repository), )"}, {"_type": "tag", "name": "health_check", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-36260-36269/notes_backend/src/api/main.py", "pattern": "/^def health_check():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "list_notes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-36260-36269/notes_backend/src/api/main.py", "pattern": "/^def list_notes($/", "language": "Python", "kind": "function", "signature": "( limit: int = Query(100, ge=1, le=1000, description=\"Maximum number of notes to return\"), offset: int = Query(0, ge=0, description=\"Number of notes to skip\"), repo: NotesRepository = Depends(get_repository), )"}, {"_type": "tag", "name": "openapi_tags", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-36260-36269/notes_backend/src/api/main.py", "pattern": "/^openapi_tags = [$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "to_note_out", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-36260-36269/notes_backend/src/api/main.py", "pattern": "/^def to_note_out(note) -> NoteOut:$/", "language": "Python", "typeref": "typename:NoteOut", "kind": "function", "signature": "(note)"}, {"_type": "tag", "name": "update_note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-36260-36269/notes_backend/src/api/main.py", "pattern": "/^def update_note($/", "language": "Python", "kind": "function", "signature": "( note_id: UUID, payload: NoteUpdate, repo: NotesRepository = Depends(get_repository), )"}], "hash": "1a66d624c74d4b3bf188a47a36dc4be3", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/main.py", "fields": [{"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "openapi_tags = [", "scope": "", "scopeKind": "", "description": "unavailable"}]}