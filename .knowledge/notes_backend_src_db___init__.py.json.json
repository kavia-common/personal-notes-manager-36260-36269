{"is_source_file": true, "format": "Python", "description": "This is an initialization (__init__.py) file for the 'db' package, setting up a singleton instance of NotesRepository and exposing it via a getter function.", "external_files": ["./notes_repository"], "external_methods": ["NotesRepository"], "published": ["NotesRepository", "get_repository"], "classes": [{"name": "NotesRepository", "description": "Repository class for managing notes, imported into this module for singleton pattern."}], "methods": [{"name": "NotesRepository get_repository()", "description": "Provides the singleton instance of NotesRepository for dependency injection.", "scope": "", "scopeKind": ""}], "calls": ["NotesRepository"], "search-terms": ["singleton", "dependency injection", "NotesRepository", "__init__.py", "repository pattern"], "state": 2, "file_id": 11, "knowledge_revision": 26, "git_revision": "", "ctags": [{"_type": "tag", "name": "__all__", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-36260-36269/notes_backend/src/db/__init__.py", "pattern": "/^__all__ = [\"NotesRepository\", \"get_repository\"]$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "get_repository", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-36260-36269/notes_backend/src/db/__init__.py", "pattern": "/^def get_repository() -> NotesRepository:$/", "language": "Python", "typeref": "typename:NotesRepository", "kind": "function", "signature": "()"}], "hash": "897eca7a34cef9b72010f6cf2e1e7091", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/db/__init__.py", "fields": [{"name": "__all__ = [\"NotesRepository\", \"get_repository\"]", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"26": ""}]}